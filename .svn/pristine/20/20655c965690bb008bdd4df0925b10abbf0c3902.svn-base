package com.agency.koda.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.List;

import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import com.agency.koda.dao.ProductInfoDao;
import com.agency.koda.model.Product;
import com.agency.koda.model.ProductClass;
import com.agency.koda.model.ProductType;
import com.agency.koda.utils.BaseDaoImpl;

@Repository
public class ProductInfoDaoImpl extends BaseDaoImpl implements ProductInfoDao
{
	//添加险种大类
	@Override
	public int addProductClass(ProductClass prodclass) 
	{
		String addProClaSql="INSERT INTO ay_product_class_msg (pcg_prodclass_id,pcg_prodclass_name) VALUES(?,?)";
		try {
			return this.getJdbcTemplate().update(addProClaSql, prodclass.getPcgProdclassId(),prodclass.getPcgProdclassName());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	//查询所有险种大类
	@SuppressWarnings({ "unchecked"})
	@Override
	public List<ProductClass> loadProdClassList() 
	{
		String selProdClaSql="SELECT pcg_prodclass_id,pcg_prodclass_name FROM ay_product_class_msg";
		try {
			List<ProductClass> pclist=this.getJdbcTemplate().query(selProdClaSql,new ProdClasSet());
			return (null!=pclist&&pclist.size()>0?pclist:null);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	//循环列表
	@SuppressWarnings("rawtypes")
	public class ProdClasSet implements RowMapper
	{
		@Override
		public Object mapRow(ResultSet rs, int index) throws SQLException {
			ProductClass prodc=new ProductClass();
			prodc.setPcgProdclassId(rs.getString("pcg_prodclass_id"));
			prodc.setPcgProdclassName(rs.getString("pcg_prodclass_name"));
			return prodc;
		}

	}
	//查询产品对象
	@Override
	public ProductClass loadProduct(String pcgProdclassId) {
		String selpcByIdSql="SELECT pcg_prodclass_id,pcg_prodclass_name FROM ay_product_class_msg WHERE pcg_prodclass_id=?";
		try {
			List<ProductClass> pclist= this.getJdbcTemplate().query(selpcByIdSql,new Object[]{pcgProdclassId},new int[]{Types.VARCHAR},new RowMapper<ProductClass>() {

				@Override
				public ProductClass mapRow(ResultSet rs, int index)
						throws SQLException {
					ProductClass prodc=new ProductClass();
					prodc.setPcgProdclassId(rs.getString("pcg_prodclass_id"));
					prodc.setPcgProdclassName(rs.getString("pcg_prodclass_name"));
					return prodc;
				}
			});
			if (null!=pclist&&pclist.size()>0)
			{
				return pclist.get(0);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	//修改保险产品
	@Override
	public int updarwProduct(ProductClass prodclass) {
		String upSql="UPDATE ay_product_class_msg SET pcg_prodclass_name=? WHERE pcg_prodclass_id=?";
		try {
			return this.getJdbcTemplate().update(upSql, prodclass.getPcgProdclassName(),prodclass.getPcgProdclassId());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
	//保险产品子类接口
	//添加保险子类信息
	@Override
	public int addProduct(Product product) {
		String addprodSql="INSERT INTO ay_product_msg(pg_prod_id,pg_prod_name,pg_prodtype_id,pg_prod_flagmain) VALUES(?,?,?,?)";
		try {
			return this.getJdbcTemplate().update(addprodSql, product.getPgProdId(),product.getPgProdName(),
					product.getPgProdtypeId(),product.getPgProdFlagmain());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
	//修改保险子类信息
	@Override
	public int upProduct(Product product) {
		String upSql="UPDATE ay_product_msg SET pg_prod_name=?,pg_prodtype_id=?,pg_prod_flagmain=? WHERE pg_prod_id=?";
		try {
			return this.getJdbcTemplate().update(upSql, product.getPgProdName(),product.getPgProdtypeId(),product.getPgProdFlagmain(),product.getPgProdId());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
	//保险产品父类
	//添加保险父类
	@Override
	public int addProductType(ProductType productType) {
		String addptSql="INSERT INTO ay_product_type_msg( ptg_prodtype_id,ptg_prodtype_name,ptg_prodclass_id) VALUES(?,?,?)";
		try {
			return this.getJdbcTemplate().update(addptSql, productType.getPtgProdtypeId(),productType.getPtgProdtypeName(),productType.getPtgProdclassId());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
	
	
	//保险产品树
	@Override
	public String selProductTree() {
		// TODO Auto-generated method stub
		return null;
	}

}
